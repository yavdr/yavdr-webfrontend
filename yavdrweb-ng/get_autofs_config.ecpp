<%pre>
#include <string>
#include <iostream>
#include <fstream>
#include <ctype.h>
#include <ClearSilver.h>
#include <yavdr/common.h>
#include <jsoncpp/json.hpp>

using namespace std;
</%pre><%args>
cmd;
</%args>
<& authenticate >
<%cpp>
reply.setHeader ("Cache-Control", "no-cache", false);
reply.setContentType ("application/json; charset=utf-8");

if( cmd == "mounts" )
{
  HDF *hdf = NULL;
  NEOERR *err;

  if (((err = hdf_init(&hdf)) != STATUS_OK) || ((err = hdf_read_file(hdf, YAVDRDB)) != STATUS_OK))
  {
    nerr_log_error(err);
  }
  else
  {
    const char * base = "system.net.media.video";
    HDF * node = hdf_get_obj( hdf, base );
	Json::Value json;
	int i = 0;
	
	if( node )
	{
      HDF * child = node->child;
      while( child && child->child )
      {
		HDF * inner_child = child->child;
		while( inner_child && inner_child->value )
        {
        	json[i][inner_child->name] = inner_child->value;
        	
        	inner_child = inner_child->next;
        }

        child = child->next;
        i++;
      }
    }
    reply.out() << json;
  }
}
</%cpp>
